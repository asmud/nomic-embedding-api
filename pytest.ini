[tool:pytest]
# Pytest configuration file

# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    -ra
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80

# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    performance: marks tests as performance tests
    unit: marks tests as unit tests
    api: marks tests as API tests
    cache: marks tests as cache-related
    model: marks tests as model-related
    config: marks tests as configuration-related
    memory: marks tests as memory management tests
    hardware: marks tests as hardware optimization tests
    batch: marks tests as batch processing tests
    pool: marks tests as model pool tests
    asyncio: marks tests as async tests

# Async test configuration
asyncio_mode = auto

# Logging configuration
log_auto_indent = true
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout configuration (requires pytest-timeout)
timeout = 300
timeout_method = thread

# Minimum Python version
minversion = 6.0

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore::UserWarning:torch.*
    ignore::FutureWarning:transformers.*

# Test execution options
junit_family = xunit2
junit_logging = all